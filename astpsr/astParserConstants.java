/* Generated By:JavaCC: Do not edit this line. astParserConstants.java */
package astpsr;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface astParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int kwArrayElm = 6;
  /** RegularExpression Id. */
  int kwArrayLen = 7;
  /** RegularExpression Id. */
  int kwArrayType = 8;
  /** RegularExpression Id. */
  int kwAssign = 9;
  /** RegularExpression Id. */
  int kwBasicType = 10;
  /** RegularExpression Id. */
  int kwBinop = 11;
  /** RegularExpression Id. */
  int kwBlock = 12;
  /** RegularExpression Id. */
  int kwBool = 13;
  /** RegularExpression Id. */
  int kwBoolVal = 14;
  /** RegularExpression Id. */
  int kwCall = 15;
  /** RegularExpression Id. */
  int kwCallStmt = 16;
  /** RegularExpression Id. */
  int kwClassDecl = 17;
  /** RegularExpression Id. */
  int kwClassDeclList = 18;
  /** RegularExpression Id. */
  int kwExp = 19;
  /** RegularExpression Id. */
  int kwExpList = 20;
  /** RegularExpression Id. */
  int kwFalse = 21;
  /** RegularExpression Id. */
  int kwField = 22;
  /** RegularExpression Id. */
  int kwFormal = 23;
  /** RegularExpression Id. */
  int kwFormalList = 24;
  /** RegularExpression Id. */
  int kwId = 25;
  /** RegularExpression Id. */
  int kwIf = 26;
  /** RegularExpression Id. */
  int kwInt = 27;
  /** RegularExpression Id. */
  int kwIntVal = 28;
  /** RegularExpression Id. */
  int kwMethodDecl = 29;
  /** RegularExpression Id. */
  int kwMethodDeclList = 30;
  /** RegularExpression Id. */
  int kwNewArray = 31;
  /** RegularExpression Id. */
  int kwNewObj = 32;
  /** RegularExpression Id. */
  int kwObjType = 33;
  /** RegularExpression Id. */
  int kwPrint = 34;
  /** RegularExpression Id. */
  int kwProgram = 35;
  /** RegularExpression Id. */
  int kwRelop = 36;
  /** RegularExpression Id. */
  int kwReturn = 37;
  /** RegularExpression Id. */
  int kwStmt = 38;
  /** RegularExpression Id. */
  int kwStmtList = 39;
  /** RegularExpression Id. */
  int kwStrVal = 40;
  /** RegularExpression Id. */
  int kwThis = 41;
  /** RegularExpression Id. */
  int kwTrue = 42;
  /** RegularExpression Id. */
  int kwType = 43;
  /** RegularExpression Id. */
  int kwUnop = 44;
  /** RegularExpression Id. */
  int kwVarDecl = 45;
  /** RegularExpression Id. */
  int kwVarDeclList = 46;
  /** RegularExpression Id. */
  int kwWhile = 47;
  /** RegularExpression Id. */
  int kwNullType = 48;
  /** RegularExpression Id. */
  int kwNullStmt = 49;
  /** RegularExpression Id. */
  int kwNullExp = 50;
  /** RegularExpression Id. */
  int DIGIT = 51;
  /** RegularExpression Id. */
  int LETTER = 52;
  /** RegularExpression Id. */
  int INTVAL = 53;
  /** RegularExpression Id. */
  int STRVAL = 54;
  /** RegularExpression Id. */
  int ID = 55;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\"ArrayElm\"",
    "\"ArrayLen\"",
    "\"ArrayType\"",
    "\"Assign\"",
    "\"BasicType\"",
    "\"Binop\"",
    "\"Block\"",
    "\"boolean\"",
    "\"BoolVal\"",
    "\"Call\"",
    "\"CallStmt\"",
    "\"ClassDecl\"",
    "\"ClassDeclList\"",
    "\"Exp\"",
    "\"ExpList\"",
    "\"false\"",
    "\"Field\"",
    "\"Formal\"",
    "\"FormalList\"",
    "\"Id\"",
    "\"If\"",
    "\"int\"",
    "\"IntVal\"",
    "\"MethodDecl\"",
    "\"MethodDeclList\"",
    "\"NewArray\"",
    "\"NewObj\"",
    "\"ObjType\"",
    "\"Print\"",
    "\"Program\"",
    "\"Relop\"",
    "\"Return\"",
    "\"Stmt\"",
    "\"StmtList\"",
    "\"StrVal\"",
    "\"This\"",
    "\"true\"",
    "\"Type\"",
    "\"Unop\"",
    "\"VarDecl\"",
    "\"VarDeclList\"",
    "\"While\"",
    "\"NullType\"",
    "\"NullStmt\"",
    "\"NullExp\"",
    "<DIGIT>",
    "<LETTER>",
    "<INTVAL>",
    "<STRVAL>",
    "<ID>",
    "\"(\"",
    "\")\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"&&\"",
    "\"||\"",
    "\"==\"",
    "\"!=\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"!\"",
  };

}
